{"version":3,"sources":["components/Header/index.js","actions/modal.js","components/Image/index.js","components/ImageInfo/index.js","components/ImageModal/index.js","actions/image.js","components/ImageGrid/index.js","App.js","reducers/image.js","reducers/modal.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["className","SET_SHOW_MODAL","SET_SELECTED_IMAGE","SET_SHOW_MODAL_DETAIL","setShowModal","flag","type","payload","setSelectedImage","imgNum","setShowModalDetail","useStyle","makeStyles","imageContainer","position","borderRadius","cursor","image","width","zIndex","Image","imgURL","index","dispatch","useDispatch","classes","onClick","src","alt","TimeAgo","addLocale","en","modal","display","alignItems","justifyContent","imageInfo","flexDirection","boxSizing","background","outline","maxWidth","props","fontFamily","overflow","boxShadow","imageDescription","textAlign","fontSize","color","padding","dataItemsContainer","flexWrap","paddingBottom","dataItem","flexBasis","justifyItems","marginBottom","dataItemTitle","lineHeight","dataItemValue","creatorHandle","border","paddingTop","profileImage","marginRight","unsplashLink","textDecoration","link","fontWeight","capitalizeFirstLetter","string","charAt","toUpperCase","slice","ImageInfoDataItem","title","value","isDesktop","CreatorHandle","profileURL","userName","href","ImageInfo","useMediaQuery","query","timeAgo","isOpen","useSelector","state","isOpenDetail","images","current_image_num","curSelNum","length","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","style","backgroundColor","opacity","Fade","in","description","alt_description","user","links","html","profile_image","medium","username","format","Date","created_at","first_name","last_name","location","likes","height","maxHeight","objectFit","infoButton","bottom","right","infoIcon","arrow","transition","forwardArrow","backwardArrow","left","ImageModal","join","urls","regular","GET_IMAGE","SET_PAGE_NUMBER","SET_IS_LOADING","SET_LOADED_COUNT","gridContainer","overflowY","overflowX","spinner","margin","mask","top","ImageGrid","pageNum","isLoading","loadedCount","gridRef","useRef","useState","loading","setLoading","useEffect","axios","get","then","res","data","catch","e","console","log","response","getImage","onScroll","current","clientHeight","scrollTop","scrollHeight","ref","onLoad","columnsCountBreakPoints","400","800","1200","gutter","map","CircularProgress","App","Component","initialState","combineReducers","action","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","f","enhancer","compose","applyMiddleware","ReduxThunk","store","createStore","reducer","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fff871b.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nexport default () => {\n    return (\n        <header className={'Header'}>\n            <h1>Image Grid</h1>\n        </header>\n    )\n}\n\n","\nexport const SET_SHOW_MODAL = '[MODAL APP] SET SHOW MODAL';\nexport const SET_SELECTED_IMAGE = '[IMAGE APP] SET SELECTED IMAGE';\nexport const SET_SHOW_MODAL_DETAIL = '[MODAL APP] SET SHOW MODAL DETAIL';\n\nexport const setShowModal = (flag) => {\n    return {\n        type: SET_SHOW_MODAL,\n        payload: flag,\n    }\n}\n\nexport const setSelectedImage = (imgNum) => {\n    return {\n        type: SET_SELECTED_IMAGE,\n        payload: imgNum,\n    }\n}\n\nexport const setShowModalDetail = (flag) => {\n    return {\n        type: SET_SHOW_MODAL_DETAIL,\n        payload: flag,\n    }\n}","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setShowModal, setSelectedImage } from '../../actions/modal';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyle = makeStyles({\n    imageContainer: {\n      position: \"relative\",\n      borderRadius: \"10px\",\n      \"&:hover\": {\n        cursor: \"zoom-in\",\n      },\n    },\n    image: {\n      position: \"relative\",\n      width: \"100%\",\n      borderRadius: \"3px\",\n      zIndex: -1,\n    },\n  });\n\nconst Image = ({ imgURL, index }) => {\n    const dispatch = useDispatch();\n    \n\n    const classes = useStyle();\n\n    const handleModalOpen = () => {\n    dispatch(setSelectedImage(index));\n    dispatch(setShowModal(true));\n}\n\n  return (\n    <div className={classes.imageContainer} onClick={handleModalOpen}>\n      <img className={classes.image} src={imgURL} alt=\"\" />\n    </div>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setShowModalDetail } from '../../actions/modal';\n\nTimeAgo.addLocale(en);\n\nconst useStyle = makeStyles({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  imageInfo: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\",\n    background:\n      \"linear-gradient(0deg, rgba(255,255,255,0.9471989479385504) 0%, rgba(247,247,247,0.9556023092830882) 48%);\",\n    outline: \"none\",\n    borderRadius: \"10px\",\n    maxWidth: (props) => (props ? \"500px\" : \"90%\"),\n    fontFamily: \"Roboto\",\n    overflow: 'hidden',\n    boxShadow: '5px 5px 5px #555555',\n  },\n  imageDescription: {\n    display: \"table\",\n    textAlign: \"center\",\n    fontFamily: \"Patua one\",\n    fontSize: (props) => (props ? \"30px\" : \"18px\"),\n    background: '#222222',\n    color: 'white',\n    width: '100%',\n    padding: '10px 20px',\n  },\n  dataItemsContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"start\",\n    flexWrap: \"wrap\",\n    background: 'green',\n    color: 'white',\n    paddingBottom: (props) => (props ? \"20px\" : \"10px\"),\n  },\n  dataItem: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexBasis: '33.33%',\n    justifyItems: \"center\",\n    alignItems: \"center\",\n    width: \"100px\",\n    color: 'white',\n    marginBottom: (props) => (props ? '15px' : '10px'),\n  },\n  dataItemTitle: {\n    color: \"white\",\n    fontSize: (props) => (props ? \"20px\" : \"14px\"),\n    lineHeight: '1.2',\n  },\n  dataItemValue: {\n    fontSize: (props) => (props ? \"16px\" : \"12px\"),\n    textAlign: \"center\",\n    lineHeight: '1.2',\n  },\n  creatorHandle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    border: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingBottom: (props) => (props ? \"20px\" : \"10px\"),\n    paddingTop: (props) => (props ? \"20px\" : \"10px\"),\n    background: 'green',\n    width: '100%',\n  },\n  profileImage: {\n    borderRadius: \"50%\",\n    marginRight: \"10px\",\n  },\n  unsplashLink: {\n    textDecoration: \"none\",\n    color: \"purple\",\n  },\n  link: {\n    color: 'white',\n    textDecoration: 'none',\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    '&:hover': {\n      textDecoration: 'none',\n    }\n  }\n});\n\nfunction capitalizeFirstLetter(string) {\n  if (string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  } else {\n    return \"Untitled\";\n  }\n}\n\nconst ImageInfoDataItem = ({ title, value, isDesktop }) => {\n  const classes = useStyle(isDesktop);\n  return (\n    <div className={classes.dataItem}>\n      <div className={classes.dataItemTitle}>{title}</div>\n      <div className={classes.dataItemValue}>{value}</div>\n    </div>\n  );\n};\n\nconst CreatorHandle = ({ profileURL, imgURL, userName, isDesktop }) => {\n  const classes = useStyle(isDesktop);\n  return (\n    <div className={classes.creatorHandle}>\n      <a className={classes.link} href={profileURL}>\n        <img className={classes.profileImage} src={imgURL} width=\"30px\" alt=\"\" />\n        <div>{userName}</div>\n      </a>\n    </div>\n  );\n};\n\n\n\nconst ImageInfo = () => {\n  const isDesktop = useMediaQuery({ query: \"(min-device-width: 1224px)\" });\n  const classes = useStyle(isDesktop);\n  const timeAgo = new TimeAgo(\"en-US\");\n\n  const dispatch = useDispatch();\n  const isOpen = useSelector(state => state.modal.isOpenDetail);\n  const images = useSelector(state => state.image.image);\n  const current_image_num = useSelector(state => state.modal.curSelNum);\n\n  const handleClose = () => {\n    dispatch(setShowModalDetail(false));\n  };\n\n  if(images.length){\n    return (\n      <Modal\n        className={classes.modal}\n        open={isOpen}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n          style: { backgroundColor: \"white\", opacity: 0.4 },\n        }}\n      >\n        <Fade in={isOpen}>\n          <div className={classes.imageInfo}>\n            <div className={classes.imageDescription}>\n              {images[current_image_num].description\n                ? capitalizeFirstLetter(images[current_image_num].description)\n                : capitalizeFirstLetter(images[current_image_num].alt_description)}\n            </div>\n            <CreatorHandle\n              profileURL={images[current_image_num].user.links.html}\n              imgURL={images[current_image_num].user.profile_image.medium}\n              userName={images[current_image_num].user.username}\n              isDesktop={isDesktop}\n            />\n            <div className={classes.dataItemsContainer}>\n              <ImageInfoDataItem\n                title=\"Created\"\n                value={timeAgo.format(new Date(images[current_image_num].created_at))}\n              />\n              <ImageInfoDataItem\n                title=\"Full name\"\n                value={\n                  (images[current_image_num].user.first_name ?? \"\") +\n                  \" \" +\n                  (images[current_image_num].user.last_name ?? \"\")\n                }\n              />\n              <ImageInfoDataItem\n                title=\"User location\"\n                value={images[current_image_num].user.location ?? \"?\"}\n              />\n              <ImageInfoDataItem title=\"Liked\" value={images[current_image_num].likes + \" times\"} />\n              <ImageInfoDataItem title=\"Width\" value={images[current_image_num].width + \"px\"} />\n              <ImageInfoDataItem title=\"Height\" value={images[current_image_num].height + \"px\"} />\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    );    \n  } else {\n    return null;\n  }\n  \n};\n\nexport default ImageInfo;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport { setShowModal, setSelectedImage, setShowModalDetail } from '../../actions/modal';\nimport ImageInfo from '../ImageInfo';\n\nconst useStyle = makeStyles({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  imageContainer: {\n    position: \"relative\",\n    overflow: \"visible\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    outline: \"none\",\n    backgroundColor: \"white\",\n    width: \"80%\",\n    height: \"95%\",\n    borderRadius: \"2px\",\n    alignItems: \"center\",\n  },\n  image: {\n    maxWidth: \"95%\",\n    maxHeight: \"100%\",\n    objectFit: \"contain\",\n  },\n  infoButton: {\n    position: \"absolute\",\n    backgroundColor: \"black\",\n    border: 'none',\n    width: \"80px\",\n    height: \"25px\",\n    outline: \"none\",\n    bottom: \"10px\",\n    right: \"15px\",\n    fontFamily: \"Roboto\",\n    cursor: \"pointer\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor:\"green\"\n    },\n  },\n  infoIcon: {},\n  arrow: {\n    position: \"absolute\",\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    outline: \"none\",\n    fontSize: \"35px\",\n    transition: \"0.2s\",\n    color: \"darkgrey\",\n    \"&:hover\": {\n      color: \"white\",\n    },\n  },\n  forwardArrow: {\n    right: \"-50px\",\n  },\n  backwardArrow: {\n    left: \"-50px\",\n  },\n});\n\nconst ImageModal = () => {\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const images = useSelector(state => state.image.image);\n\n  const isOpen = useSelector(state => state.modal.isOpen);\n  const current_image_num = useSelector(state => state.modal.curSelNum);\n\n  const handleClose = () => {\n    dispatch(setShowModal(false));\n  };\n\n  const handlePrevious = () => {\n    dispatch(setSelectedImage(current_image_num - 1));\n  };\n\n  const handleNext = () => {\n    dispatch(setSelectedImage(current_image_num + 1));\n  };\n\n  const handleInfoIconClick = () => {\n    dispatch(setShowModalDetail(true));\n  };\n\n  return (\n    <div>\n      <Modal\n        className={classes.modal}\n        open={isOpen}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n          style: { backgroundColor: \"black\", opacity: 0.8 },\n        }}\n      >\n        <Fade in={isOpen}>\n          <div className={classes.imageContainer}>\n            {\n              current_image_num !== 0 && (\n                <button\n                  className={[classes.backwardArrow, classes.arrow].join(\" \")}\n                  onClick={handlePrevious}\n                >\n                  <ArrowBackIosIcon fontSize='large' />\n                </button>\n              )\n            }\n\n            {images.length &&\n            <img\n              className={classes.image}\n              src={images[current_image_num].urls.regular}\n              alt=\"\"\n            />\n            }\n\n            {\n              current_image_num !== images.length - 1 && (\n                <button\n                  className={[classes.forwardArrow, classes.arrow].join(\" \")}\n                  onClick={handleNext}\n                >\n                  <ArrowForwardIosIcon fontSize='large' />\n                </button>\n              )\n            }\n\n            <button\n              className={classes.infoButton}\n              onClick={handleInfoIconClick}\n            >\n              Details\n            </button>\n          </div>\n        </Fade>\n      </Modal>\n      <ImageInfo />\n    </div>\n  );\n};\n\nexport default ImageModal;\n","import axios from 'axios';\nconst CLIENT_ID = 'dE30n6DCz7vQP0wYMPEM9YMlUb_ORGIUAI54hgmV2uo';\n\nexport const GET_IMAGE = '[IMAGE APP] GET IMAGE';\nexport const SET_PAGE_NUMBER = '[IMAGE APP] SET PAGE NUMBER';\nexport const SET_IS_LOADING = '[IMAGE APP] SET IS LOADING';\nexport const SET_LOADED_COUNT = '[IMAGE APP] SET LOADED COUNT';\n\nexport const getImage = (pageNum) => dispatch => {\n    axios\n    .get(\n        `https://api.unsplash.com/photos/?page=${pageNum}&per_page=15&client_id=${CLIENT_ID}`\n    )\n    .then((res) => {\n        dispatch({\n            type: GET_IMAGE,\n            payload: res.data,\n        });\n        dispatch({\n            type: SET_IS_LOADING,\n            payload: false,\n        })\n    })\n    .catch((e) => {\n        console.log(e.response);\n    });\n}\n\nexport const setPageNum = (data) => {\n    return {\n        type: SET_PAGE_NUMBER,\n        payload: data,\n    }\n}\n\nexport const setIsLoading = (flag) => {\n    return {\n        type: SET_IS_LOADING,\n        payload: flag,\n    }\n}\n\nexport const setLoadedCount = (num) => {\n    return {\n        type: SET_LOADED_COUNT,\n        payload: num,\n    }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from '../Image';\nimport ImageModal from '../ImageModal';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { getImage, setLoadedCount, setPageNum } from '../../actions/image';\n\nconst useStyle = makeStyles({\n    gridContainer: {\n        width: '100%',\n        height: '80vh',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        position: 'relative',\n    },\n    spinner: {\n        margin: 'auto',\n        color: \"white !!!important\",\n    },\n    mask: {\n        position: 'fixed',\n        left: '0',\n        top: '20vh',\n        width: '100%',\n        height: '100%',\n        background: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }\n});\n\nfunction ImageGrid(props) {\n    const dispatch = useDispatch();\n\n    const images = useSelector(state => state.image.image);\n    const pageNum = useSelector(state => state.image.pageNum);\n    const isLoading = useSelector(state => state.image.isLoading);\n    const loadedCount = useSelector(state => state.image.loadedCount);\n\n    const classes = useStyle();\n    const gridRef = useRef(null);\n    const [loading, setLoading] = useState(false);\n    const offset = 50;\n\n    useEffect(() => {\n        dispatch(getImage(pageNum));\n    }, [pageNum]);\n\n    useEffect(() => {\n        if(loadedCount < images.length) {\n            setLoading(true);\n        } else {\n            setLoading(false);\n        }\n    }, [images, loadedCount])\n\n    const handleScroll = () => {\n        const height = gridRef.current.clientHeight;\n        const top = gridRef.current.scrollTop;\n        const sHeight = gridRef.current.scrollHeight;\n\n        if(top > sHeight-height-offset && !isLoading && !loading) {\n            dispatch(setPageNum({\n                pageNum: pageNum + 1,\n                isLoading: true,\n            }));\n        }\n    }\n\n    const handleLoad = () => {\n        dispatch(setLoadedCount(loadedCount+1));\n    }\n    \n\n    return (\n        <div className={classes.gridContainer} onScroll={handleScroll} ref={gridRef} \n                onLoad={handleLoad}>\n            <ResponsiveMasonry\n                columnsCountBreakPoints={{ 400: 1, 800: 2, 1200: 3 }}\n            >\n                <Masonry gutter=\"1vw\">\n                    {images.map((data, index) => {\n                    return (\n                        <Image\n                        key={index}\n                        index={index}\n                        imgURL={data.urls.regular}\n                        />\n                    );\n                    })}\n                </Masonry>\n            </ResponsiveMasonry>\n            <ImageModal />\n            {loading &&\n            <div className={classes.mask}>\n                <CircularProgress\n                    className={classes.spinner}\n                    style={{ color: \"white\" }}\n                />\n            </div>}\n        </div>\n    );\n}\n\nexport default ImageGrid;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport ImageGrid from './components/ImageGrid';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <main>\n          <ImageGrid />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { \n    GET_IMAGE,\n    SET_PAGE_NUMBER,\n    SET_IS_LOADING,\n    SET_LOADED_COUNT,\n} from '../actions/image';\n\nconst initialState = {\n    image: [],\n    pageNum: 0,\n    isLoading: false,\n    loadedCount: 0,\n}\n\nexport default (state = initialState, action = {}) => {\n    switch (action.type) {\n    case GET_IMAGE:\n        return {\n            ...state,\n            image: [...state.image, ...action.payload],\n        }\n    case SET_PAGE_NUMBER:\n        return {\n            ...state,\n            pageNum: action.payload.pageNum,\n            isLoading: action.payload.isLoading,\n        }\n    case SET_IS_LOADING:\n        return {\n            ...state,\n            isLoading: action.payload,\n        }\n    case SET_LOADED_COUNT:\n        return {\n            ...state,\n            loadedCount: action.payload,\n        }\n    default:\n        return state\n    }\n}","import { \n    SET_SHOW_MODAL,\n    SET_SELECTED_IMAGE,\n    SET_SHOW_MODAL_DETAIL,\n} from '../actions/modal'\n\nconst initialState = {\n    curSelNum: 0,\n    isOpen: false,\n    isOpenDetail: false,\n}\n\nexport default (state = initialState, action = {}) => {\n    switch (action.type) {\n    case SET_SHOW_MODAL:\n        return {\n            ...state,\n            isOpen: action.payload\n        }\n    case SET_SELECTED_IMAGE:\n        return {\n            ...state,\n            curSelNum: action.payload,\n        }\n    case SET_SHOW_MODAL_DETAIL:\n        return {\n            ...state,\n            isOpenDetail: action.payload,\n        }\n    default:\n        return state\n    }\n}","import { combineReducers } from 'redux'\nimport image from './image';\nimport modal from './modal';\n\nexport default combineReducers({\n    image,\n    modal,\n})","import { createStore, compose, applyMiddleware } from 'redux'\nimport reducer from './reducers'\nimport ReduxThunk from 'redux-thunk'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n\nconst enhancer = compose(\n    applyMiddleware(ReduxThunk),\n    devTools\n)\n\nconst store = createStore(reducer, enhancer)\n\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}